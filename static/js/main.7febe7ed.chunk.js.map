{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","onAdd","useState","setTitle","isTitle","setIsTitle","setDescription","isDescription","setIsDescription","setImgUrl","isImgUrl","setIsImgUrl","setImdbUrl","isImdbUrl","setIsImdbUrl","setImdbId","isImdbId","setIsImdbId","handleEvent","event","target","name","value","onSubmit","preventDefault","type","placeholder","onChange","App","moviesFromServer","setMovies","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7febe7ed.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [isTitle, setIsTitle] = useState(true);\n\n  const [description, setDescription] = useState('');\n  const [isDescription, setIsDescription] = useState(true);\n\n  const [imgUrl, setImgUrl] = useState('');\n  const [isImgUrl, setIsImgUrl] = useState(true);\n\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [isImdbUrl, setIsImdbUrl] = useState(true);\n\n  const [imdbId, setImdbId] = useState('');\n  const [isImdbId, setIsImdbId] = useState(true);\n\n  const handleSubmit = () => {\n    setIsTitle(!!title);\n    setIsDescription(!!description);\n    setIsImgUrl(!!imgUrl);\n    setIsImdbUrl(!!imdbUrl);\n    setIsImdbId(!!imdbId);\n\n    const movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    if (title && description && imgUrl && imdbUrl && imdbId) {\n      onAdd(movie);\n\n      setTitle('');\n      setDescription('');\n      setImgUrl('');\n      setImdbUrl('');\n      setImdbId('');\n    }\n  };\n\n  const handleEvent = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'title':\n        setTitle(value);\n        setIsTitle(true);\n        break;\n\n      case 'description':\n        setDescription(value);\n        setIsDescription(true);\n        break;\n\n      case 'imgUrl':\n        setImgUrl(value);\n        setIsImgUrl(true);\n        break;\n\n      case 'imdbUrl':\n        setImdbUrl(value);\n        setIsImdbUrl(true);\n        break;\n\n      case 'imdbId':\n        setImdbId(value);\n        setIsImdbId(true);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <form\n      className=\"newMovie\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        handleSubmit();\n      }}\n    >\n      <div>\n        <input\n          className=\"inputData\"\n          name=\"title\"\n          type=\"text\"\n          value={title}\n          placeholder=\"Enter name a new film\"\n          data-cy=\"form-title\"\n          onChange={handleEvent}\n        />\n        {!isTitle && (\n          <span className=\"error\">Please enter the title</span>\n        )}\n        <input\n          className=\"inputData\"\n          name=\"description\"\n          type=\"text\"\n          value={description}\n          placeholder=\"Enter Description\"\n          data-cy=\"form-description\"\n          onChange={handleEvent}\n        />\n        {!isDescription && (\n          <span className=\"error\">Please enter the Description</span>\n        )}\n        <input\n          className=\"inputData\"\n          name=\"imgUrl\"\n          type=\"text\"\n          value={imgUrl}\n          placeholder=\"Enter ImgUrl\"\n          data-cy=\"form-imgUrl\"\n          onChange={handleEvent}\n        />\n        {!isImgUrl && (\n          <span className=\"error\">Please enter the ImgUrl</span>\n        )}\n        <input\n          className=\"inputData\"\n          name=\"imdbUrl\"\n          type=\"text\"\n          value={imdbUrl}\n          placeholder=\"Enter imdbUrl\"\n          data-cy=\"form-imdbUrl\"\n          onChange={handleEvent}\n        />\n        {!isImdbUrl && (\n          <span className=\"error\">Please enter the ImdbUrl</span>\n        )}\n        <input\n          className=\"inputData\"\n          name=\"imdbId\"\n          type=\"text\"\n          value={imdbId}\n          placeholder=\"Enter imdbId\"\n          data-cy=\"form-imdbId\"\n          onChange={handleEvent}\n        />\n        {!isImdbId && (\n          <span className=\"error\">Please enter the ImdbId</span>\n        )}\n      </div>\n      <button\n        className=\"btn\"\n        type=\"submit\"\n        data-cy=\"form-submit-button\"\n      >\n        Submit\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState([...moviesFromServer]);\n\n  const addMovie = (movie: Movie) => {\n    setMovies((prevMovies) => ([...prevMovies, movie]));\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <h1 className=\"title\">Add new movie</h1>\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}